name: Microsoft Playwright Tests in Azure
on:
  workflow_dispatch:
permissions: # Required when using AuthType as EntraId
    id-token: write
    contents: read
jobs:
    test:
      timeout-minutes: 60
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
      # This step is to sign-in to Azure to run tests from GitHub Action workflow. 
      # Choose how to set up authentication to Azure from GitHub Actions. This is one example. 
  
        - name: Login to Azure with AzPowershell (enableAzPSSession true) 
          uses: azure/login@v2 
          with: 
            client-id: ${{ secrets.AZURE_CLIENT_ID }} 
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}  
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  
            enable-AzPSSession: true 
  
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 8.0.x
  
        - name: Restore dependencies
          run: dotnet restore
          working-directory: . # update accordingly
  
        - name: Build
          run: dotnet build --no-restore
          working-directory: . # update accordingly
  
        - name: Run Playwright tests
          working-directory: . # update accordingly
          env:
            # Regional endpoint for Microsoft Playwright Testing
            PLAYWRIGHT_SERVICE_URL: ${{ secrets.PLAYWRIGHT_SERVICE_URL }}
            PLAYWRIGHT_SERVICE_RUN_ID: ${{ github.run_id }}-${{ github.run_attempt }}-${{ github.sha }}
          run: dotnet test --settings:.runsettings --logger "microsoft-playwright-testing" -- NUnit.NumberOfTestWorkers=20
  
        - name: Archive Extent Report
          if: always() # Ensures this step runs even if tests fail
          run: |
            mkdir -p reports
            cp bin/Debug/net8.0/TestReports/*.html reports/
          continue-on-error: true
    
        - name: Upload Extent Report as Artifact
          uses: actions/upload-artifact@v3
          with:
            name: ExtentReport
            path: reports/
    
        - name: Add Extent Report Link to Summary
          if: always() # Ensure this step runs even if tests fail
          run: echo "ðŸ’¡The Extent Report is available for download from the Artifacts section below." >> $GITHUB_STEP_SUMMARY
