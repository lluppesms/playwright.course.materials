# ------------------------------------------------------------------------------------------------------------------------
# GHA Workflow to run tests using Playwright using the Playwright Service
# ------------------------------------------------------------------------------------------------------------------------
# You may also need to updates permissions for this template to work - see note below
# ------------------------------------------------------------------------------------------------------------------------
name: 2-playwright-workspace
run-name: '2. Playwright Workspace ${{ github.run_id }} by @${{ github.actor }}'
on:
  workflow_dispatch:
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    permissions:
      id-token: write    
      contents: write
      issues: read
      checks: write
      pull-requests: read
      actions: read    
      pages: write  
    env:
      envCode: ${{ inputs.envCode }}
      configFileName: 'playwright.config.workspace.ts'
      PLAYWRIGHT_TEST_PATH: './${{ inputs.testPath }}'
      PLAYWRIGHT_RESULTS_PATH: 'test-results-${{ inputs.testType }}/playwright-results-${{ inputs.testType }}-${{ inputs.envCode }}.xml'
      PLAYWRIGHT_BASE_URL: 'http://${{ vars.APP_NAME }}-${{ inputs.envCode }}.azurewebsites.net'

    steps:
    - uses: actions/checkout@v4

    - name: Display Variables
      run: |-
        echo "envCode=${{ inputs.envCode }}"
        echo "PLAYWRIGHT_TEST_PATH=${{ env.PLAYWRIGHT_TEST_PATH }}"
        echo "PLAYWRIGHT_RESULTS_PATH=${{ env.PLAYWRIGHT_RESULTS_PATH }}"
        echo "PLAYWRIGHT_BASE_URL=${{ env.PLAYWRIGHT_BASE_URL }}"
        echo "---------------------------------"
        echo "##[group]All Variables:"
        echo "Environments:"
        echo '${{ toJSON(env) }}'
        echo "Variables:"
        echo '${{ toJSON(vars) }}'
        echo "Secrets:"
        echo '${{ toJSON(secrets) }}'
        echo "##[endgroup]"
        echo "---------------------------------"
        echo "##[group]Directory of ${{ github.workspace  }}"
        tree -R ${{ github.workspace  }}
        echo "##[endgroup]"
      continue-on-error: true

    - name: Replace Tokens in Config
      uses: qetza/replacetokens-action@v1
      with:
        sources: './${{ env.configFileName }}; !local/ => ${{ env.configFileName }}'
        variables: '[${{ toJSON(env) }},${{ toJSON(vars) }},${{ toJSON(secrets) }}]' # use environment & variables & secrets

    - name: Display Config File
      run: |-
        echo "##[group]Contents of ${{ env.configFileName }}"
        cat ${{ env.configFileName }}
        echo "##[endgroup]"
      continue-on-error: true

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install Dependencies
      run: npm ci

    # - name: Install DotEnv
    #   run: npm install dotenv
    # - name: Install Playwright
    #   run: npx playwright install --with-deps

    - name: Login to Azure with AzPowershell (enableAzPSSession true)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }} # GitHub Open ID connect values copied in previous steps
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true
        
    - name: Run Playwright tests
      env:
        PLAYWRIGHT_SERVICE_URL: ${{ secrets.PLAYWRIGHT_WORKSPACE_URL }}
        #PLAYWRIGHT_SERVICE_ACCESS_TOKEN: ${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}
        #PLAYWRIGHT_SERVICE_RUN_ID: ${{ github.run_id }}-${{ github.run_attempt }}-${{ github.sha }}
      run: npx playwright test ${{ inputs.testPath }} --config ${{ env.configFileName }}

    - name: Save Test Results Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          **/${{ env.PLAYWRIGHT_RESULTS_PATH }}
      continue-on-error: true