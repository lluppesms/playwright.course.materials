# ------------------------------------------------------------------------------------------------------------------------
# GHA Workflow to run tests using Playwright using the Playwright Service
# ------------------------------------------------------------------------------------------------------------------------
# This action needs these two repository variables set:
#   PLAYWRIGHT_WORKSPACE_URL=wss://eastus.api.playwright.microsoft.com/playwrightworkspaces/YOUR-WORKSPACE-GUID/browsers
#   URL_TO_TEST=https://www.saucedemo.com/   (or whatever URL you are testing!)
# This action needs and OAUTH Federated Credential set up and these three repository secrets set:
#   AZURE_CLIENT_ID=GUID
#   AZURE_SUBSCRIPTION_ID=GUID
#   AZURE_TENANT_ID=GUID
# ------------------------------------------------------------------------------------------------------------------------
name: 2-playwright-workspace
run-name: '2. Playwright Workspace by @${{ github.actor }} # ${{ github.run_id }}'
on:
  workflow_dispatch:
    inputs:
      deployEnvironment:
        description: Environment
        required: true
        default: 'dev' 
        type: environment
      testPath:
        description: Directory with Tests
        required: true
        default: './web/tests' 
        type: string
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    permissions:
      id-token: write    
      contents: write
      issues: read
      checks: write
      pull-requests: read
      actions: read    
      pages: write  
    env:
      deployEnvironment: ${{ inputs.deployEnvironment }}
      PLAYWRIGHT_TEST_PATH: ${{ inputs.testPath }}
      PLAYWRIGHT_BASE_URL: ${{ vars.URL_TO_TEST }}
      configFileName: 'playwright.config.workspace.ts'
      importedConfigFileName: 'playwright.config.cicd.ts'
      PLAYWRIGHT_RESULTS_PATH: 'test-results/playwright-results-${{ inputs.deployEnvironment }}.xml'

    steps:
    - uses: actions/checkout@v4

    - name: Display Variables
      run: |-
        echo "deployEnvironment=${{ inputs.deployEnvironment }}"
        echo "PLAYWRIGHT_SERVICE_URL=${{ vars.PLAYWRIGHT_WORKSPACE_URL }}"
        echo "PLAYWRIGHT_TEST_PATH=${{ env.PLAYWRIGHT_TEST_PATH }}"
        echo "PLAYWRIGHT_RESULTS_PATH=${{ env.PLAYWRIGHT_RESULTS_PATH }}"
        echo "PLAYWRIGHT_BASE_URL=${{ env.PLAYWRIGHT_BASE_URL }}"
        echo "URL_TO_TEST=${{ vars.URL_TO_TEST }}"
        echo "---------------------------------"
        echo "##[group]All Variables:"
        echo "Environments:"
        echo '${{ toJSON(env) }}'
        echo "Variables:"
        echo '${{ toJSON(vars) }}'
        echo "Secrets:"
        echo "---------------------------------"
        echo "##[group]Directory of ${{ github.workspace  }}"
        tree -R ${{ github.workspace  }}
        echo "##[endgroup]"
      continue-on-error: true

    - name: Replace Tokens in Imported Config File
      uses: qetza/replacetokens-action@v1
      with:
        sources: './${{ env.importedConfigFileName }}; !local/ => ${{ env.importedConfigFileName }}'
        variables: '[${{ toJSON(env) }},${{ toJSON(vars) }},${{ toJSON(secrets) }}]' # use environment & variables & secrets

    - name: Display Config Files
      run: |-
        echo "##[group]Contents of ${{ env.configFileName }}"
        cat ${{ env.configFileName }}
        echo "##[endgroup]"
        echo "##[group]Contents of ${{ env.importedConfigFileName }}"
        cat ${{ env.importedConfigFileName }}
        echo "##[endgroup]"
      continue-on-error: true

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install Dependencies
      run: |
        npm ci
        npm install dotenv
        npm init @azure/playwright@latest

    - name: Login to Azure with AzPowershell (enableAzPSSession true)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }} # GitHub Open ID connect values copied in previous steps
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true
        
    - name: Run Playwright tests
      env:
        PLAYWRIGHT_SERVICE_URL: ${{ vars.PLAYWRIGHT_WORKSPACE_URL }}
      run: npx playwright test --config ${{ env.configFileName }}

    - name: Save Test Results Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          **/${{ env.PLAYWRIGHT_RESULTS_PATH }}
      continue-on-error: true